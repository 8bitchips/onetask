app directory {
  wasp: {
    version: "^0.11.4"
  },
  title: "directory",
  client: {
    rootComponent: import { Layout } from "@client/Layout.jsx"
  },
  db: {
    prisma: {
      clientPreviewFeatures: ["extendedWhereUnique"]
    }
  },
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {}
    },
    onAuthFailedRedirectTo: "/login",
    onAuthSucceededRedirectTo: "/"
  }
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import Login from "@client/pages/auth/Login.jsx"
}
route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import Signup from "@client/pages/auth/Signup.jsx"
}

entity User {=psl
    id       Int           @id @default(autoincrement())
    username String        @unique
    password String
    dataset  UserDataset[]
psl=}

entity UserDataset {=psl
    id             Int    @id @default(autoincrement())
    username       String
    profilePicture String
    nationality    String
    userId         Int
    user           User   @relation(fields: [userId], references: [id])
psl=}

action searchUsers {
  fn: import { searchUsers } from "@server/actions.js",
  entities: [UserDataset]
}

query getUserDataset {
  fn: import { getUserDataset } from "@server/queries.js",
  entities: [User, UserDataset]
}

route SearchRoute { path: "/search", to: SearchPage }
page SearchPage {
  component: import { Search } from "@client/pages/Search.jsx",
  authRequired: false
}

route HomePageRoute { path: "/", to: HomePage }
page HomePage {
  component: import { HomePage } from "@client/pages/Home.jsx"
}
